syntax = "proto3";

package greet;
option go_package = "greet/greetpb";

message Greeting{
    string first_name =1;
    string last_name =2;
}

message GreetingRequest{
    Greeting greeting =1;
}

message GreetingResponse{
    string result =1;
}

message GreetManyTimesRequest{
    Greeting greeting =1;
}

message GreetManyTimesResponse{
    string result =1;
}

message LongGreetRequest{
    Greeting greeting =1;

}

message LongGreetResponse{
    string result =1;
}

message GreetEveryoneRequest{
    Greeting greeting =1;
}

message GreetEveryoneResponse{
    string result = 1;
}

message GreetWithDeadlineRequest{
    Greeting greeting =1;
}

message GreetWithDeadlineResponse{
    string result=1;
}

service GreetService{
    // Unary
    rpc Greet (GreetingRequest) returns (GreetingResponse) {}; 
    
    //Server Streaming 
    rpc GreetManyTimes(GreetManyTimesRequest) returns(stream GreetManyTimesResponse){};

    // client Streaming 

    rpc LongGreet(stream LongGreetRequest) returns(LongGreetResponse){};

    // BiDi Streaming

    rpc GreetEveryone(stream GreetEveryoneRequest) returns (stream GreetEveryoneResponse){};

    // Unary with deadline
    
    rpc GreetWithDeadline (GreetWithDeadlineRequest) returns (GreetWithDeadlineResponse) {}; 

}